{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SnugglePuffs\\\\Desktop\\\\ReactJS\\\\my-app\\\\src\\\\page\\\\list.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport Header from '../component/header';\nimport SearchBar from '../component/searchBar';\nimport CharacterList from '../component/charactersListing';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListPage = ({}) => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [pokemonList, setPokemonList] = useState([]);\n\n  const getList = async url => {\n    try {\n      setLoading(true);\n      const response = await fetch('https://api.pokemontcg.io/v1/cards');\n      const data = response.cards.map(({\n        id,\n        imageUrl,\n        name\n      }) => ({\n        id,\n        imageUrl,\n        name\n      }));\n      setPokemonList(data);\n    } catch (error) {\n      throw new Error('Something went wrong, try again...');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(getList, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: /*#__PURE__*/_jsxDEV(SearchBar, {\n        placeholder: \"Search by name...\",\n        onSearch: getList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), loading ? \"Loading...\" : /*#__PURE__*/_jsxDEV(CharacterList, {\n      pokemons: pokemonList,\n      onClick: id => history.push(`/details/${id}`)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ListPage, \"Ab95ciOQSsA9vzgBARNfJvJm+0U=\");\n\n_c = ListPage;\nexport default ListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListPage\");","map":{"version":3,"sources":["C:/Users/SnugglePuffs/Desktop/ReactJS/my-app/src/page/list.jsx"],"names":["React","Fragment","useState","useEffect","Header","SearchBar","CharacterList","ListPage","loading","setLoading","pokemonList","setPokemonList","getList","url","response","fetch","data","cards","map","id","imageUrl","name","error","Error","history","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;;AAEA,MAAMC,QAAQ,GAAG,CAAE,EAAF,KAAS;AAAA;;AAEtB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMU,OAAO,GAAG,MAAMC,GAAN,IAAa;AACzB,QAAI;AACAJ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAD,CAA5B;AACA,YAAMC,IAAI,GAAGF,QAAQ,CAACG,KAAT,CAAeC,GAAf,CAAmB,CAAC;AAAEC,QAAAA,EAAF;AAAMC,QAAAA,QAAN;AAAgBC,QAAAA;AAAhB,OAAD,MAA6B;AACrDF,QAAAA,EADqD;AAErDC,QAAAA,QAFqD;AAGrDC,QAAAA;AAHqD,OAA7B,CAAnB,CAAb;AAKAV,MAAAA,cAAc,CAACK,IAAD,CAAd;AACH,KATD,CASE,OAAOM,KAAP,EAAc;AACZ,YAAM,IAAIC,KAAJ,CAAU,oCAAV,CAAN;AACH,KAXD,SAWU;AACNd,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,GAfD;;AAiBAN,EAAAA,SAAS,CAACS,OAAD,EAAU,EAAV,CAAT;AAEA,sBACI,QAAC,QAAD;AAAA,4BAEI,QAAC,MAAD;AAAA,6BACI,QAAC,SAAD;AAAW,QAAA,WAAW,EAAC,mBAAvB;AAA2C,QAAA,QAAQ,EAAEA;AAArD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ,EAMMJ,OAAO,GACJ,YADI,gBAEJ,QAAC,aAAD;AAAe,MAAA,QAAQ,EAAEE,WAAzB;AAAsC,MAAA,OAAO,EAAES,EAAE,IAAIK,OAAO,CAACC,IAAR,CAAc,YAAWN,EAAG,EAA5B;AAArD;AAAA;AAAA;AAAA;AAAA,YART;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CApCD;;GAAMZ,Q;;KAAAA,Q;AAsCN,eAAeA,QAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\r\nimport Header from '../component/header';\r\nimport SearchBar from '../component/searchBar';\r\nimport CharacterList from '../component/charactersListing';\r\n\r\nconst ListPage = ( {}) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [pokemonList, setPokemonList] = useState([]);\r\n\r\n    const getList = async url => {\r\n        try {\r\n            setLoading(true);\r\n            const response = await fetch('https://api.pokemontcg.io/v1/cards');\r\n            const data = response.cards.map(({ id, imageUrl, name }) => ({\r\n                    id,\r\n                    imageUrl,\r\n                    name\r\n                }));\r\n            setPokemonList(data);\r\n        } catch (error) {\r\n            throw new Error('Something went wrong, try again...')\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(getList, []);\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <Header>\r\n                <SearchBar placeholder=\"Search by name...\" onSearch={getList} ></SearchBar>\r\n            </Header>\r\n\r\n            { loading ?\r\n                (\"Loading...\") :\r\n                (<CharacterList pokemons={pokemonList} onClick={id => history.push(`/details/${id}`)}></CharacterList>)}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ListPage;"]},"metadata":{},"sourceType":"module"}